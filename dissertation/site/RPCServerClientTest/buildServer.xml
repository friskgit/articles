<project name="DisserServletServer" default="dist" basedir=".">
    <description>
      Database interface for dissertation RIA
    </description>
  <!-- set global properties for this build -->

  <property name="project_name" value="DisserServletServer"/>
  <property name="src" location="src"/>
  <property name="build" location="bin"/>
  <property name="dist"  location="dist"/>
  <property name="lib"  location="lib"/>
  <property name="res"  location="res"/>
  <property name="reports" location="reports"/>
  <property name="jar.name" value="${project_name}.jar" />
  <property name="package" value="org.henrikfrisk.rpc" />
  <property name="version" value="0.0.1" />
    
  <!-- top level targets -->
  <target name="compile" depends="init" description="compile source" >
		<javac srcdir="${src}" destdir="${build}">  
          <compilerarg value="-Xlint:unchecked" />
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javac>
  </target>
 
  <path id="dist.classpath">
    <fileset dir="${lib}" includes="**/*.jar, **/*.zip" />
  </path>
  
  <manifestclasspath property="dist.manifest.classpath" jarfile="${lib}/${jar.name}.jar">
    <classpath refid="dist.classpath" />
  </manifestclasspath>
  
 <target name="dist" depends="compile" description="generate the distributable files " >    
    <jar destfile="${dist}/${jar.name}" basedir="${build}">
      <zipfileset src="${lib}/xmlrpc-server-3.1.jar" />
      <zipfileset src="${lib}/xmlrpc-common-3.1.jar" />
      <zipfileset src="${lib}/commons-logging-1.1.jar" />
     <zipfileset src="${lib}/ws-commons-util-1.0.2.jar" />
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Specification-Version" value="${version}"/>
        <attribute name="Implementation-Version" value="${version} ${TODAY}"/> 
        <attribute name="Class-Path" value="${dist.manifest.classpath}"/>   
        <attribute name="Main-Class" value="${package}.server.JavaServer"/>
      </manifest>
    </jar>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${reports}"/>
  </target>

  <target name="run-tests" depends="compile" description="run your test suite" >		
		<junit printsummary="yes" haltonfailure="no" showoutput="yes" >
			<classpath>
				<pathelement path="${build}"/>
				<fileset dir="lib">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>			
		
 		  <batchtest fork="yes" todir="${reports}/raw/">
		  	<formatter type="xml"/>
		    <fileset dir="${src}">
		      <include name="**/*Test*.java"/>
		    </fileset>
		  </batchtest>
		</junit>	
	</target>
	
  <target name ="test" depends="run-tests">
		<junitreport todir="${reports}">
		  <fileset dir="${reports}/raw/">
		    <include name="TEST-*.xml"/>
		  </fileset>
		  <report format="frames" todir="${reports}\html\"/>
		</junitreport>
  </target>

  <target name="doc" description="Create the documentation">
    <javadoc destdir="doc/">
      <fileset dir="src/">
        <include name="org/henrikfrisk/disserdb/*.java"/>
      </fileset>
    </javadoc>
  </target>
  <!-- supporting targets -->
	
  <target name="init" description="initialize the build environment" >
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create directory structures -->
    <mkdir dir="${build}"/>
    <mkdir dir="${lib}"/>
    <mkdir dir="${dist}/lib"/>
    <mkdir dir="${reports}"/>
    <mkdir dir="${reports}/raw/"/>
    <mkdir dir="${reports}/html/"/>
  </target>
  
  <target name="all" depends="clean, test">  	
  </target>
  
</project>

